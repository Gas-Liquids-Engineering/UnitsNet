//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#nullable enable

namespace UnitsNet.NumberExtensions.NumberToPressureDeltaPerUnitLength
{
    /// <summary>
    /// A number to PressureDeltaPerUnitLength Extensions
    /// </summary>
    public static class NumberToPressureDeltaPerUnitLengthExtensions
    {
        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromDecapascalsDeltaPerKilometer(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength DecapascalsDeltaPerKilometer<T>(this T value) =>
            PressureDeltaPerUnitLength.FromDecapascalsDeltaPerKilometer(Convert.ToDouble(value));

        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromDecapascalsDeltaPerMeter(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength DecapascalsDeltaPerMeter<T>(this T value) =>
            PressureDeltaPerUnitLength.FromDecapascalsDeltaPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromGigapascalsDeltaPerKilometer(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength GigapascalsDeltaPerKilometer<T>(this T value) =>
            PressureDeltaPerUnitLength.FromGigapascalsDeltaPerKilometer(Convert.ToDouble(value));

        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromGigapascalsDeltaPerMeter(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength GigapascalsDeltaPerMeter<T>(this T value) =>
            PressureDeltaPerUnitLength.FromGigapascalsDeltaPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromHectopascalsDeltaPerKilometer(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength HectopascalsDeltaPerKilometer<T>(this T value) =>
            PressureDeltaPerUnitLength.FromHectopascalsDeltaPerKilometer(Convert.ToDouble(value));

        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromHectopascalsDeltaPerMeter(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength HectopascalsDeltaPerMeter<T>(this T value) =>
            PressureDeltaPerUnitLength.FromHectopascalsDeltaPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromKilopascalsDeltaPerKilometer(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength KilopascalsDeltaPerKilometer<T>(this T value) =>
            PressureDeltaPerUnitLength.FromKilopascalsDeltaPerKilometer(Convert.ToDouble(value));

        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromKilopascalsDeltaPerMeter(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength KilopascalsDeltaPerMeter<T>(this T value) =>
            PressureDeltaPerUnitLength.FromKilopascalsDeltaPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromMegapascalsDeltaPerKilometer(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength MegapascalsDeltaPerKilometer<T>(this T value) =>
            PressureDeltaPerUnitLength.FromMegapascalsDeltaPerKilometer(Convert.ToDouble(value));

        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromMegapascalsDeltaPerMeter(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength MegapascalsDeltaPerMeter<T>(this T value) =>
            PressureDeltaPerUnitLength.FromMegapascalsDeltaPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromMicropascalsDeltaPerKilometer(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength MicropascalsDeltaPerKilometer<T>(this T value) =>
            PressureDeltaPerUnitLength.FromMicropascalsDeltaPerKilometer(Convert.ToDouble(value));

        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromMicropascalsDeltaPerMeter(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength MicropascalsDeltaPerMeter<T>(this T value) =>
            PressureDeltaPerUnitLength.FromMicropascalsDeltaPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromMillipascalsDeltaPerKilometer(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength MillipascalsDeltaPerKilometer<T>(this T value) =>
            PressureDeltaPerUnitLength.FromMillipascalsDeltaPerKilometer(Convert.ToDouble(value));

        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromMillipascalsDeltaPerMeter(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength MillipascalsDeltaPerMeter<T>(this T value) =>
            PressureDeltaPerUnitLength.FromMillipascalsDeltaPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromPascalsDeltaPerKilometer(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength PascalsDeltaPerKilometer<T>(this T value) =>
            PressureDeltaPerUnitLength.FromPascalsDeltaPerKilometer(Convert.ToDouble(value));

        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromPascalsDeltaPerMeter(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength PascalsDeltaPerMeter<T>(this T value) =>
            PressureDeltaPerUnitLength.FromPascalsDeltaPerMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromPoundsPerSquareInchDeltaPerFoot(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength PoundsPerSquareInchDeltaPerFoot<T>(this T value) =>
            PressureDeltaPerUnitLength.FromPoundsPerSquareInchDeltaPerFoot(Convert.ToDouble(value));

        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromPoundsPerSquareInchDeltaPerHundredFeet(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength PoundsPerSquareInchDeltaPerHundredFeet<T>(this T value) =>
            PressureDeltaPerUnitLength.FromPoundsPerSquareInchDeltaPerHundredFeet(Convert.ToDouble(value));

        /// <inheritdoc cref="PressureDeltaPerUnitLength.FromPoundsPerSquareInchDeltaPerMile(UnitsNet.QuantityValue)" />
        public static PressureDeltaPerUnitLength PoundsPerSquareInchDeltaPerMile<T>(this T value) =>
            PressureDeltaPerUnitLength.FromPoundsPerSquareInchDeltaPerMile(Convert.ToDouble(value));

    }
}
