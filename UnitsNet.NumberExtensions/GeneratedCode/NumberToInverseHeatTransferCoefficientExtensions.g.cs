//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#nullable enable

namespace UnitsNet.NumberExtensions.NumberToInverseHeatTransferCoefficient
{
    /// <summary>
    /// A number to InverseHeatTransferCoefficient Extensions
    /// </summary>
    public static class NumberToInverseHeatTransferCoefficientExtensions
    {
        /// <inheritdoc cref="InverseHeatTransferCoefficient.FromSquareCentimeterKelvinsPerWatt(UnitsNet.QuantityValue)" />
        public static InverseHeatTransferCoefficient SquareCentimeterKelvinsPerWatt<T>(this T value) =>
            InverseHeatTransferCoefficient.FromSquareCentimeterKelvinsPerWatt(Convert.ToDouble(value));

        /// <inheritdoc cref="InverseHeatTransferCoefficient.FromSquareCentimeterSecondKelvinsPerCalorie(UnitsNet.QuantityValue)" />
        public static InverseHeatTransferCoefficient SquareCentimeterSecondKelvinsPerCalorie<T>(this T value) =>
            InverseHeatTransferCoefficient.FromSquareCentimeterSecondKelvinsPerCalorie(Convert.ToDouble(value));

        /// <inheritdoc cref="InverseHeatTransferCoefficient.FromSquareFootHourFahrenheitsPerBtu(UnitsNet.QuantityValue)" />
        public static InverseHeatTransferCoefficient SquareFootHourFahrenheitsPerBtu<T>(this T value) =>
            InverseHeatTransferCoefficient.FromSquareFootHourFahrenheitsPerBtu(Convert.ToDouble(value));

        /// <inheritdoc cref="InverseHeatTransferCoefficient.FromSquareMetersCelsiusPerWatt(UnitsNet.QuantityValue)" />
        public static InverseHeatTransferCoefficient SquareMetersCelsiusPerWatt<T>(this T value) =>
            InverseHeatTransferCoefficient.FromSquareMetersCelsiusPerWatt(Convert.ToDouble(value));

        /// <inheritdoc cref="InverseHeatTransferCoefficient.FromSquareMeterHourKelvinsPerKilocalorie(UnitsNet.QuantityValue)" />
        public static InverseHeatTransferCoefficient SquareMeterHourKelvinsPerKilocalorie<T>(this T value) =>
            InverseHeatTransferCoefficient.FromSquareMeterHourKelvinsPerKilocalorie(Convert.ToDouble(value));

        /// <inheritdoc cref="InverseHeatTransferCoefficient.FromSquareMetersKelvinPerWatt(UnitsNet.QuantityValue)" />
        public static InverseHeatTransferCoefficient SquareMetersKelvinPerWatt<T>(this T value) =>
            InverseHeatTransferCoefficient.FromSquareMetersKelvinPerWatt(Convert.ToDouble(value));

    }
}
