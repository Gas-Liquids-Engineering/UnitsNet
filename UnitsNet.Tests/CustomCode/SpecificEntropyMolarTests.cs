//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

namespace UnitsNet.Tests.CustomCode
{
    public class SpecificEntropyMolarTests : SpecificEntropyMolarTestsBase
    {
        // Override properties in base class here
        protected override double BTUsPerPoundMoleFahrenheitInOneJoulePerMoleKelvin => 2.388459e-1;

        protected override double CaloriesPerMoleKelvinInOneJoulePerMoleKelvin => 2.39006e-4;

        protected override double JoulesPerKilomoleKelvinInOneJoulePerMoleKelvin => 1.0e-3;

        protected override double JoulesPerMoleKelvinInOneJoulePerMoleKelvin => 1.0;

        protected override double KilojoulesPerKilomoleKelvinInOneJoulePerMoleKelvin => 1.0e-6;

        protected override double KilojoulesPerMoleKelvinInOneJoulePerMoleKelvin => 1.0e-3;

        protected override double MegajoulesPerKilomoleKelvinInOneJoulePerMoleKelvin => 1.0e-9;

        protected override double MegajoulesPerMoleKelvinInOneJoulePerMoleKelvin => 1.0e-6;

        protected override bool SupportsSIUnitSystem => false;
    }
}
